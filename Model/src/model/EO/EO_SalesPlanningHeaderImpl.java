package model.EO;

import HandlerBean.Bunny;

import HandlerBean.PageListener;

import HandlerBean.UserInfo;

import javax.faces.context.FacesContext;

import javax.servlet.http.HttpServletRequest;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Mar 29 14:09:42 CET 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EO_SalesPlanningHeaderImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;


    FacesContext fctx;
    HttpServletRequest req;
    @Override
    protected void prepareForDML(int i, TransactionEvent transactionEvent) {
        super.prepareForDML(i, transactionEvent);
        if (i == DML_UPDATE) {
            fctx = FacesContext.getCurrentInstance();
            req =
            (HttpServletRequest)fctx.getExternalContext().getRequest();
            
            setLastUpdatedBy((String)req.getSession().getAttribute("userID"));
        }
    }

    @Override
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        this.setSpHeaderId(new SequenceImpl("xx_sales_planning_headers_seq",
                                            getDBTransaction()).getSequenceNumber());
    }


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SpHeaderId {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getSpHeaderId();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setSpHeaderId((Number)value);
            }
        }
        ,
        ProgramId {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getProgramId();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setProgramId((Number)value);
            }
        }
        ,
        CustPoNo {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getCustPoNo();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setCustPoNo((String)value);
            }
        }
        ,
        PoType {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getPoType();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setPoType((String)value);
            }
        }
        ,
        PoRecDate {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getPoRecDate();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setPoRecDate((Date)value);
            }
        }
        ,
        BookingMonth {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getBookingMonth();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setBookingMonth((Date)value);
            }
        }
        ,
        ShipmentDate {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getShipmentDate();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setShipmentDate((Date)value);
            }
        }
        ,
        ExMill {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getExMill();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setExMill((Timestamp)value);
            }
        }
        ,
        ShipMode {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getShipMode();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setShipMode((String)value);
            }
        }
        ,
        Ner {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getNer();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setNer((String)value);
            }
        }
        ,
        DyeingWoNo {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getDyeingWoNo();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setDyeingWoNo((String)value);
            }
        }
        ,
        GreigeCompletionDate {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getGreigeCompletionDate();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setGreigeCompletionDate((Date)value);
            }
        }
        ,
        GreigeContractNo {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getGreigeContractNo();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setGreigeContractNo((String)value);
            }
        }
        ,
        DyeingStatus {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getDyeingStatus();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setDyeingStatus((String)value);
            }
        }
        ,
        AccessoriesOrderDate {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getAccessoriesOrderDate();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setAccessoriesOrderDate((Date)value);
            }
        }
        ,
        Accessories {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getAccessories();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setAccessories((String)value);
            }
        }
        ,
        CstkPl {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getCstkPl();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setCstkPl((String)value);
            }
        }
        ,
        Value {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getValue();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setValue((Number)value);
            }
        }
        ,
        SalesContractNo {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getSalesContractNo();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setSalesContractNo((String)value);
            }
        }
        ,
        LcStatus {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getLcStatus();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setLcStatus((String)value);
            }
        }
        ,
        Remarks {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getRemarks();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getCreationDate();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CurrencyCode {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getCurrencyCode();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setCurrencyCode((String)value);
            }
        }
        ,
        PoStatusLookupCode {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getPoStatusLookupCode();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setPoStatusLookupCode((String)value);
            }
        }
        ,
        ShipTerm {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getShipTerm();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setShipTerm((String)value);
            }
        }
        ,
        ViewerNote {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getViewerNote();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setViewerNote((String)value);
            }
        }
        ,
        InspectionDate {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getInspectionDate();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setInspectionDate((Timestamp)value);
            }
        }
        ,
        ContainerBookingDate {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getContainerBookingDate();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setContainerBookingDate((Timestamp)value);
            }
        }
        ,
        InspectionDone {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getInspectionDone();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setInspectionDone((String)value);
            }
        }
        ,
        ContainerBooked {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getContainerBooked();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setContainerBooked((String)value);
            }
        }
        ,
        VersionNumber {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getVersionNumber();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        BookMonth {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getBookMonth();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setBookMonth((String)value);
            }
        }
        ,
        DyeingInputDate {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getDyeingInputDate();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setDyeingInputDate((Date)value);
            }
        }
        ,
        StitchInputDate {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getStitchInputDate();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setStitchInputDate((Date)value);
            }
        }
        ,
        Bags {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getBags();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setBags((String)value);
            }
        }
        ,
        CareLabel {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getCareLabel();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setCareLabel((String)value);
            }
        }
        ,
        Carton {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getCarton();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setCarton((String)value);
            }
        }
        ,
        ElasticCordFusing {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getElasticCordFusing();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setElasticCordFusing((String)value);
            }
        }
        ,
        ImportedMisc {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getImportedMisc();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setImportedMisc((String)value);
            }
        }
        ,
        InhouseStickers {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getInhouseStickers();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setInhouseStickers((String)value);
            }
        }
        ,
        Inserts {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getInserts();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setInserts((String)value);
            }
        }
        ,
        Misc {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getMisc();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setMisc((String)value);
            }
        }
        ,
        NormalThread {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getNormalThread();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setNormalThread((String)value);
            }
        }
        ,
        Stiffers {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getStiffers();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setStiffers((String)value);
            }
        }
        ,
        SylkoThread {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getSylkoThread();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setSylkoThread((String)value);
            }
        }
        ,
        TargetDate {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getTargetDate();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setTargetDate((Date)value);
            }
        }
        ,
        ThirdPartyAudit {
            public Object get(EO_SalesPlanningHeaderImpl obj) {
                return obj.getThirdPartyAudit();
            }

            public void put(EO_SalesPlanningHeaderImpl obj, Object value) {
                obj.setThirdPartyAudit((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(EO_SalesPlanningHeaderImpl object);

        public abstract void put(EO_SalesPlanningHeaderImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SPHEADERID = AttributesEnum.SpHeaderId.index();
    public static final int PROGRAMID = AttributesEnum.ProgramId.index();
    public static final int CUSTPONO = AttributesEnum.CustPoNo.index();
    public static final int POTYPE = AttributesEnum.PoType.index();
    public static final int PORECDATE = AttributesEnum.PoRecDate.index();
    public static final int BOOKINGMONTH = AttributesEnum.BookingMonth.index();
    public static final int SHIPMENTDATE = AttributesEnum.ShipmentDate.index();
    public static final int EXMILL = AttributesEnum.ExMill.index();
    public static final int SHIPMODE = AttributesEnum.ShipMode.index();
    public static final int NER = AttributesEnum.Ner.index();
    public static final int DYEINGWONO = AttributesEnum.DyeingWoNo.index();
    public static final int GREIGECOMPLETIONDATE = AttributesEnum.GreigeCompletionDate.index();
    public static final int GREIGECONTRACTNO = AttributesEnum.GreigeContractNo.index();
    public static final int DYEINGSTATUS = AttributesEnum.DyeingStatus.index();
    public static final int ACCESSORIESORDERDATE = AttributesEnum.AccessoriesOrderDate.index();
    public static final int ACCESSORIES = AttributesEnum.Accessories.index();
    public static final int CSTKPL = AttributesEnum.CstkPl.index();
    public static final int VALUE = AttributesEnum.Value.index();
    public static final int SALESCONTRACTNO = AttributesEnum.SalesContractNo.index();
    public static final int LCSTATUS = AttributesEnum.LcStatus.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int CURRENCYCODE = AttributesEnum.CurrencyCode.index();
    public static final int POSTATUSLOOKUPCODE = AttributesEnum.PoStatusLookupCode.index();
    public static final int SHIPTERM = AttributesEnum.ShipTerm.index();
    public static final int VIEWERNOTE = AttributesEnum.ViewerNote.index();
    public static final int INSPECTIONDATE = AttributesEnum.InspectionDate.index();
    public static final int CONTAINERBOOKINGDATE = AttributesEnum.ContainerBookingDate.index();
    public static final int INSPECTIONDONE = AttributesEnum.InspectionDone.index();
    public static final int CONTAINERBOOKED = AttributesEnum.ContainerBooked.index();
    public static final int VERSIONNUMBER = AttributesEnum.VersionNumber.index();
    public static final int BOOKMONTH = AttributesEnum.BookMonth.index();
    public static final int DYEINGINPUTDATE = AttributesEnum.DyeingInputDate.index();
    public static final int STITCHINPUTDATE = AttributesEnum.StitchInputDate.index();
    public static final int BAGS = AttributesEnum.Bags.index();
    public static final int CARELABEL = AttributesEnum.CareLabel.index();
    public static final int CARTON = AttributesEnum.Carton.index();
    public static final int ELASTICCORDFUSING = AttributesEnum.ElasticCordFusing.index();
    public static final int IMPORTEDMISC = AttributesEnum.ImportedMisc.index();
    public static final int INHOUSESTICKERS = AttributesEnum.InhouseStickers.index();
    public static final int INSERTS = AttributesEnum.Inserts.index();
    public static final int MISC = AttributesEnum.Misc.index();
    public static final int NORMALTHREAD = AttributesEnum.NormalThread.index();
    public static final int STIFFERS = AttributesEnum.Stiffers.index();
    public static final int SYLKOTHREAD = AttributesEnum.SylkoThread.index();
    public static final int TARGETDATE = AttributesEnum.TargetDate.index();
    public static final int THIRDPARTYAUDIT = AttributesEnum.ThirdPartyAudit.index();

    /**
     * This is the default constructor (do not remove).
     */
    public EO_SalesPlanningHeaderImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.EO.EO_SalesPlanningHeader");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for SpHeaderId, using the alias name SpHeaderId.
     * @return the SpHeaderId
     */
    public Number getSpHeaderId() {
        return (Number)getAttributeInternal(SPHEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SpHeaderId.
     * @param value value to set the SpHeaderId
     */
    public void setSpHeaderId(Number value) {
        setAttributeInternal(SPHEADERID, value);
    }

    /**
     * Gets the attribute value for ProgramId, using the alias name ProgramId.
     * @return the ProgramId
     */
    public Number getProgramId() {
        return (Number)getAttributeInternal(PROGRAMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProgramId.
     * @param value value to set the ProgramId
     */
    public void setProgramId(Number value) {
        setAttributeInternal(PROGRAMID, value);
    }

    /**
     * Gets the attribute value for CustPoNo, using the alias name CustPoNo.
     * @return the CustPoNo
     */
    public String getCustPoNo() {
        return (String)getAttributeInternal(CUSTPONO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustPoNo.
     * @param value value to set the CustPoNo
     */
    public void setCustPoNo(String value) {
        setAttributeInternal(CUSTPONO, value);
    }

    /**
     * Gets the attribute value for PoType, using the alias name PoType.
     * @return the PoType
     */
    public String getPoType() {
        return (String)getAttributeInternal(POTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoType.
     * @param value value to set the PoType
     */
    public void setPoType(String value) {
        setAttributeInternal(POTYPE, value);
    }

    /**
     * Gets the attribute value for PoRecDate, using the alias name PoRecDate.
     * @return the PoRecDate
     */
    public Date getPoRecDate() {
        return (Date)getAttributeInternal(PORECDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoRecDate.
     * @param value value to set the PoRecDate
     */
    public void setPoRecDate(Date value) {
        setAttributeInternal(PORECDATE, value);
    }

    /**
     * Gets the attribute value for BookingMonth, using the alias name BookingMonth.
     * @return the BookingMonth
     */
    public Date getBookingMonth() {
        return (Date)getAttributeInternal(BOOKINGMONTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for BookingMonth.
     * @param value value to set the BookingMonth
     */
    public void setBookingMonth(Date value) {
        setAttributeInternal(BOOKINGMONTH, value);
    }

    /**
     * Gets the attribute value for ShipmentDate, using the alias name ShipmentDate.
     * @return the ShipmentDate
     */
    public Date getShipmentDate() {
        return (Date)getAttributeInternal(SHIPMENTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShipmentDate.
     * @param value value to set the ShipmentDate
     */
    public void setShipmentDate(Date value) {
        setAttributeInternal(SHIPMENTDATE, value);
    }

    /**
     * Gets the attribute value for ExMill, using the alias name ExMill.
     * @return the ExMill
     */
    public Timestamp getExMill() {
        return (Timestamp)getAttributeInternal(EXMILL);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExMill.
     * @param value value to set the ExMill
     */
    public void setExMill(Timestamp value) {
        setAttributeInternal(EXMILL, value);
    }

    /**
     * Gets the attribute value for ShipMode, using the alias name ShipMode.
     * @return the ShipMode
     */
    public String getShipMode() {
        return (String)getAttributeInternal(SHIPMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShipMode.
     * @param value value to set the ShipMode
     */
    public void setShipMode(String value) {
        setAttributeInternal(SHIPMODE, value);
    }

    /**
     * Gets the attribute value for Ner, using the alias name Ner.
     * @return the Ner
     */
    public String getNer() {
        return (String)getAttributeInternal(NER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ner.
     * @param value value to set the Ner
     */
    public void setNer(String value) {
        setAttributeInternal(NER, value);
    }

    /**
     * Gets the attribute value for DyeingWoNo, using the alias name DyeingWoNo.
     * @return the DyeingWoNo
     */
    public String getDyeingWoNo() {
        return (String)getAttributeInternal(DYEINGWONO);
    }

    /**
     * Sets <code>value</code> as the attribute value for DyeingWoNo.
     * @param value value to set the DyeingWoNo
     */
    public void setDyeingWoNo(String value) {
        setAttributeInternal(DYEINGWONO, value);
    }

    /**
     * Gets the attribute value for GreigeCompletionDate, using the alias name GreigeCompletionDate.
     * @return the GreigeCompletionDate
     */
    public Date getGreigeCompletionDate() {
        return (Date)getAttributeInternal(GREIGECOMPLETIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for GreigeCompletionDate.
     * @param value value to set the GreigeCompletionDate
     */
    public void setGreigeCompletionDate(Date value) {
        setAttributeInternal(GREIGECOMPLETIONDATE, value);
    }

    /**
     * Gets the attribute value for GreigeContractNo, using the alias name GreigeContractNo.
     * @return the GreigeContractNo
     */
    public String getGreigeContractNo() {
        return (String)getAttributeInternal(GREIGECONTRACTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for GreigeContractNo.
     * @param value value to set the GreigeContractNo
     */
    public void setGreigeContractNo(String value) {
        setAttributeInternal(GREIGECONTRACTNO, value);
    }

    /**
     * Gets the attribute value for DyeingStatus, using the alias name DyeingStatus.
     * @return the DyeingStatus
     */
    public String getDyeingStatus() {
        return (String)getAttributeInternal(DYEINGSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DyeingStatus.
     * @param value value to set the DyeingStatus
     */
    public void setDyeingStatus(String value) {
        setAttributeInternal(DYEINGSTATUS, value);
    }

    /**
     * Gets the attribute value for AccessoriesOrderDate, using the alias name AccessoriesOrderDate.
     * @return the AccessoriesOrderDate
     */
    public Date getAccessoriesOrderDate() {
        return (Date)getAttributeInternal(ACCESSORIESORDERDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccessoriesOrderDate.
     * @param value value to set the AccessoriesOrderDate
     */
    public void setAccessoriesOrderDate(Date value) {
        setAttributeInternal(ACCESSORIESORDERDATE, value);
    }

    /**
     * Gets the attribute value for Accessories, using the alias name Accessories.
     * @return the Accessories
     */
    public String getAccessories() {
        return (String)getAttributeInternal(ACCESSORIES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Accessories.
     * @param value value to set the Accessories
     */
    public void setAccessories(String value) {
        setAttributeInternal(ACCESSORIES, value);
    }

    /**
     * Gets the attribute value for CstkPl, using the alias name CstkPl.
     * @return the CstkPl
     */
    public String getCstkPl() {
        return (String)getAttributeInternal(CSTKPL);
    }

    /**
     * Sets <code>value</code> as the attribute value for CstkPl.
     * @param value value to set the CstkPl
     */
    public void setCstkPl(String value) {
        setAttributeInternal(CSTKPL, value);
    }

    /**
     * Gets the attribute value for Value, using the alias name Value.
     * @return the Value
     */
    public Number getValue() {
        return (Number)getAttributeInternal(VALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Value.
     * @param value value to set the Value
     */
    public void setValue(Number value) {
        setAttributeInternal(VALUE, value);
    }

    /**
     * Gets the attribute value for SalesContractNo, using the alias name SalesContractNo.
     * @return the SalesContractNo
     */
    public String getSalesContractNo() {
        return (String)getAttributeInternal(SALESCONTRACTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SalesContractNo.
     * @param value value to set the SalesContractNo
     */
    public void setSalesContractNo(String value) {
        setAttributeInternal(SALESCONTRACTNO, value);
    }

    /**
     * Gets the attribute value for LcStatus, using the alias name LcStatus.
     * @return the LcStatus
     */
    public String getLcStatus() {
        return (String)getAttributeInternal(LCSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for LcStatus.
     * @param value value to set the LcStatus
     */
    public void setLcStatus(String value) {
        setAttributeInternal(LCSTATUS, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }


    /**
     * Gets the attribute value for CurrencyCode, using the alias name CurrencyCode.
     * @return the CurrencyCode
     */
    public String getCurrencyCode() {
        return (String)getAttributeInternal(CURRENCYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrencyCode.
     * @param value value to set the CurrencyCode
     */
    public void setCurrencyCode(String value) {
        setAttributeInternal(CURRENCYCODE, value);
    }

    /**
     * Gets the attribute value for PoStatusLookupCode, using the alias name PoStatusLookupCode.
     * @return the PoStatusLookupCode
     */
    public String getPoStatusLookupCode() {
        return (String)getAttributeInternal(POSTATUSLOOKUPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoStatusLookupCode.
     * @param value value to set the PoStatusLookupCode
     */
    public void setPoStatusLookupCode(String value) {
        setAttributeInternal(POSTATUSLOOKUPCODE, value);
    }

    /**
     * Gets the attribute value for ShipTerm, using the alias name ShipTerm.
     * @return the ShipTerm
     */
    public String getShipTerm() {
        return (String)getAttributeInternal(SHIPTERM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShipTerm.
     * @param value value to set the ShipTerm
     */
    public void setShipTerm(String value) {
        setAttributeInternal(SHIPTERM, value);
    }

    /**
     * Gets the attribute value for ViewerNote, using the alias name ViewerNote.
     * @return the ViewerNote
     */
    public String getViewerNote() {
        return (String)getAttributeInternal(VIEWERNOTE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ViewerNote.
     * @param value value to set the ViewerNote
     */
    public void setViewerNote(String value) {
        setAttributeInternal(VIEWERNOTE, value);
    }

    /**
     * Gets the attribute value for InspectionDate, using the alias name InspectionDate.
     * @return the InspectionDate
     */
    public Timestamp getInspectionDate() {
        return (Timestamp)getAttributeInternal(INSPECTIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InspectionDate.
     * @param value value to set the InspectionDate
     */
    public void setInspectionDate(Timestamp value) {
        setAttributeInternal(INSPECTIONDATE, value);
    }

    /**
     * Gets the attribute value for ContainerBookingDate, using the alias name ContainerBookingDate.
     * @return the ContainerBookingDate
     */
    public Timestamp getContainerBookingDate() {
        return (Timestamp)getAttributeInternal(CONTAINERBOOKINGDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContainerBookingDate.
     * @param value value to set the ContainerBookingDate
     */
    public void setContainerBookingDate(Timestamp value) {
        setAttributeInternal(CONTAINERBOOKINGDATE, value);
    }

    /**
     * Gets the attribute value for InspectionDone, using the alias name InspectionDone.
     * @return the InspectionDone
     */
    public String getInspectionDone() {
        return (String)getAttributeInternal(INSPECTIONDONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InspectionDone.
     * @param value value to set the InspectionDone
     */
    public void setInspectionDone(String value) {
        setAttributeInternal(INSPECTIONDONE, value);
    }

    /**
     * Gets the attribute value for ContainerBooked, using the alias name ContainerBooked.
     * @return the ContainerBooked
     */
    public String getContainerBooked() {
        return (String)getAttributeInternal(CONTAINERBOOKED);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContainerBooked.
     * @param value value to set the ContainerBooked
     */
    public void setContainerBooked(String value) {
        setAttributeInternal(CONTAINERBOOKED, value);
    }

    /**
     * Gets the attribute value for VersionNumber, using the alias name VersionNumber.
     * @return the VersionNumber
     */
    public Number getVersionNumber() {
        return (Number)getAttributeInternal(VERSIONNUMBER);
    }


    /**
     * Gets the attribute value for BookMonth, using the alias name BookMonth.
     * @return the BookMonth
     */
    public String getBookMonth() {
        return (String)getAttributeInternal(BOOKMONTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for BookMonth.
     * @param value value to set the BookMonth
     */
    public void setBookMonth(String value) {
        setAttributeInternal(BOOKMONTH, value);
    }

    /**
     * Gets the attribute value for DyeingInputDate, using the alias name DyeingInputDate.
     * @return the DyeingInputDate
     */
    public Date getDyeingInputDate() {
        return (Date)getAttributeInternal(DYEINGINPUTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DyeingInputDate.
     * @param value value to set the DyeingInputDate
     */
    public void setDyeingInputDate(Date value) {
        setAttributeInternal(DYEINGINPUTDATE, value);
    }

    /**
     * Gets the attribute value for StitchInputDate, using the alias name StitchInputDate.
     * @return the StitchInputDate
     */
    public Date getStitchInputDate() {
        return (Date)getAttributeInternal(STITCHINPUTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StitchInputDate.
     * @param value value to set the StitchInputDate
     */
    public void setStitchInputDate(Date value) {
        setAttributeInternal(STITCHINPUTDATE, value);
    }

    /**
     * Gets the attribute value for Bags, using the alias name Bags.
     * @return the Bags
     */
    public String getBags() {
        return (String)getAttributeInternal(BAGS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Bags.
     * @param value value to set the Bags
     */
    public void setBags(String value) {
        setAttributeInternal(BAGS, value);
    }

    /**
     * Gets the attribute value for CareLabel, using the alias name CareLabel.
     * @return the CareLabel
     */
    public String getCareLabel() {
        return (String)getAttributeInternal(CARELABEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for CareLabel.
     * @param value value to set the CareLabel
     */
    public void setCareLabel(String value) {
        setAttributeInternal(CARELABEL, value);
    }

    /**
     * Gets the attribute value for Carton, using the alias name Carton.
     * @return the Carton
     */
    public String getCarton() {
        return (String)getAttributeInternal(CARTON);
    }

    /**
     * Sets <code>value</code> as the attribute value for Carton.
     * @param value value to set the Carton
     */
    public void setCarton(String value) {
        setAttributeInternal(CARTON, value);
    }

    /**
     * Gets the attribute value for ElasticCordFusing, using the alias name ElasticCordFusing.
     * @return the ElasticCordFusing
     */
    public String getElasticCordFusing() {
        return (String)getAttributeInternal(ELASTICCORDFUSING);
    }

    /**
     * Sets <code>value</code> as the attribute value for ElasticCordFusing.
     * @param value value to set the ElasticCordFusing
     */
    public void setElasticCordFusing(String value) {
        setAttributeInternal(ELASTICCORDFUSING, value);
    }

    /**
     * Gets the attribute value for ImportedMisc, using the alias name ImportedMisc.
     * @return the ImportedMisc
     */
    public String getImportedMisc() {
        return (String)getAttributeInternal(IMPORTEDMISC);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImportedMisc.
     * @param value value to set the ImportedMisc
     */
    public void setImportedMisc(String value) {
        setAttributeInternal(IMPORTEDMISC, value);
    }

    /**
     * Gets the attribute value for InhouseStickers, using the alias name InhouseStickers.
     * @return the InhouseStickers
     */
    public String getInhouseStickers() {
        return (String)getAttributeInternal(INHOUSESTICKERS);
    }

    /**
     * Sets <code>value</code> as the attribute value for InhouseStickers.
     * @param value value to set the InhouseStickers
     */
    public void setInhouseStickers(String value) {
        setAttributeInternal(INHOUSESTICKERS, value);
    }

    /**
     * Gets the attribute value for Inserts, using the alias name Inserts.
     * @return the Inserts
     */
    public String getInserts() {
        return (String)getAttributeInternal(INSERTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Inserts.
     * @param value value to set the Inserts
     */
    public void setInserts(String value) {
        setAttributeInternal(INSERTS, value);
    }

    /**
     * Gets the attribute value for Misc, using the alias name Misc.
     * @return the Misc
     */
    public String getMisc() {
        return (String)getAttributeInternal(MISC);
    }

    /**
     * Sets <code>value</code> as the attribute value for Misc.
     * @param value value to set the Misc
     */
    public void setMisc(String value) {
        setAttributeInternal(MISC, value);
    }

    /**
     * Gets the attribute value for NormalThread, using the alias name NormalThread.
     * @return the NormalThread
     */
    public String getNormalThread() {
        return (String)getAttributeInternal(NORMALTHREAD);
    }

    /**
     * Sets <code>value</code> as the attribute value for NormalThread.
     * @param value value to set the NormalThread
     */
    public void setNormalThread(String value) {
        setAttributeInternal(NORMALTHREAD, value);
    }

    /**
     * Gets the attribute value for Stiffers, using the alias name Stiffers.
     * @return the Stiffers
     */
    public String getStiffers() {
        return (String)getAttributeInternal(STIFFERS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Stiffers.
     * @param value value to set the Stiffers
     */
    public void setStiffers(String value) {
        setAttributeInternal(STIFFERS, value);
    }

    /**
     * Gets the attribute value for SylkoThread, using the alias name SylkoThread.
     * @return the SylkoThread
     */
    public String getSylkoThread() {
        return (String)getAttributeInternal(SYLKOTHREAD);
    }

    /**
     * Sets <code>value</code> as the attribute value for SylkoThread.
     * @param value value to set the SylkoThread
     */
    public void setSylkoThread(String value) {
        setAttributeInternal(SYLKOTHREAD, value);
    }

    /**
     * Gets the attribute value for TargetDate, using the alias name TargetDate.
     * @return the TargetDate
     */
    public Date getTargetDate() {
        return (Date)getAttributeInternal(TARGETDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TargetDate.
     * @param value value to set the TargetDate
     */
    public void setTargetDate(Date value) {
        setAttributeInternal(TARGETDATE, value);
    }


    /**
     * Gets the attribute value for ThirdPartyAudit, using the alias name ThirdPartyAudit.
     * @return the ThirdPartyAudit
     */
    public String getThirdPartyAudit() {
        return (String)getAttributeInternal(THIRDPARTYAUDIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ThirdPartyAudit.
     * @param value value to set the ThirdPartyAudit
     */
    public void setThirdPartyAudit(String value) {
        setAttributeInternal(THIRDPARTYAUDIT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param spHeaderId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number spHeaderId) {
        return new Key(new Object[]{spHeaderId});
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
//        if (operation == DML_INSERT) {
//            this.setSpHeaderId(new SequenceImpl("xx_sales_planning_headers_seq",
//                                                getDBTransaction()).getSequenceNumber());
//            
//        }
        super.doDML(operation, e);
    }
}
