package model.EO;

import HandlerBean.Bunny;

import HandlerBean.PageListener;

import HandlerBean.UserInfo;


import javax.faces.context.FacesContext;

import javax.servlet.http.HttpServletRequest;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 25 13:43:33 UZT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EO_XXSalesPlanningProgramImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;
    FacesContext fctx;
    HttpServletRequest req;

    @Override
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        this.setProgramId(new SequenceImpl("XX_SALES_PLANNING_PROGRAM_SEQ",
                                           getDBTransaction()).getSequenceNumber());
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ProgramId {
            public Object get(EO_XXSalesPlanningProgramImpl obj) {
                return obj.getProgramId();
            }

            public void put(EO_XXSalesPlanningProgramImpl obj, Object value) {
                obj.setProgramId((Number)value);
            }
        }
        ,
        ProgramName {
            public Object get(EO_XXSalesPlanningProgramImpl obj) {
                return obj.getProgramName();
            }

            public void put(EO_XXSalesPlanningProgramImpl obj, Object value) {
                obj.setProgramName((String)value);
            }
        }
        ,
        CustAcctId {
            public Object get(EO_XXSalesPlanningProgramImpl obj) {
                return obj.getCustAcctId();
            }

            public void put(EO_XXSalesPlanningProgramImpl obj, Object value) {
                obj.setCustAcctId((Number)value);
            }
        }
        ,
        ProgramManager {
            public Object get(EO_XXSalesPlanningProgramImpl obj) {
                return obj.getProgramManager();
            }

            public void put(EO_XXSalesPlanningProgramImpl obj, Object value) {
                obj.setProgramManager((String)value);
            }
        }
        ,
        ProgramPhase {
            public Object get(EO_XXSalesPlanningProgramImpl obj) {
                return obj.getProgramPhase();
            }

            public void put(EO_XXSalesPlanningProgramImpl obj, Object value) {
                obj.setProgramPhase((Number)value);
            }
        }
        ,
        CreatedBy {
            public Object get(EO_XXSalesPlanningProgramImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(EO_XXSalesPlanningProgramImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(EO_XXSalesPlanningProgramImpl obj) {
                return obj.getCreationDate();
            }

            public void put(EO_XXSalesPlanningProgramImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(EO_XXSalesPlanningProgramImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(EO_XXSalesPlanningProgramImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(EO_XXSalesPlanningProgramImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(EO_XXSalesPlanningProgramImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VersionNumber {
            public Object get(EO_XXSalesPlanningProgramImpl obj) {
                return obj.getVersionNumber();
            }

            public void put(EO_XXSalesPlanningProgramImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(EO_XXSalesPlanningProgramImpl object);

        public abstract void put(EO_XXSalesPlanningProgramImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PROGRAMID = AttributesEnum.ProgramId.index();
    public static final int PROGRAMNAME = AttributesEnum.ProgramName.index();
    public static final int CUSTACCTID = AttributesEnum.CustAcctId.index();
    public static final int PROGRAMMANAGER = AttributesEnum.ProgramManager.index();
    public static final int PROGRAMPHASE = AttributesEnum.ProgramPhase.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int VERSIONNUMBER = AttributesEnum.VersionNumber.index();

    /**
     * This is the default constructor (do not remove).
     */
    public EO_XXSalesPlanningProgramImpl() {
        
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.EO.EO_XXSalesPlanningProgram");
        }
        return mDefinitionObject;
    }

    @Override
        protected void prepareForDML(int i, TransactionEvent transactionEvent) {
            super.prepareForDML(i, transactionEvent);
            if (i == DML_UPDATE) {
                fctx = FacesContext.getCurrentInstance();
                req =
                (HttpServletRequest)fctx.getExternalContext().getRequest();
                
                setLastUpdatedBy(new Number(Integer.parseInt((String)req.getSession().getAttribute("userID"))));
            }
        }


    /**
     * Gets the attribute value for ProgramId, using the alias name ProgramId.
     * @return the ProgramId
     */
    public Number getProgramId() {
        return (Number)getAttributeInternal(PROGRAMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProgramId.
     * @param value value to set the ProgramId
     */
    public void setProgramId(Number value) {
        setAttributeInternal(PROGRAMID, value);
    }

    /**
     * Gets the attribute value for ProgramName, using the alias name ProgramName.
     * @return the ProgramName
     */
    public String getProgramName() {
        return (String)getAttributeInternal(PROGRAMNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProgramName.
     * @param value value to set the ProgramName
     */
    public void setProgramName(String value) {
        setAttributeInternal(PROGRAMNAME, value);
    }

    /**
     * Gets the attribute value for CustAcctId, using the alias name CustAcctId.
     * @return the CustAcctId
     */
    public Number getCustAcctId() {
        return (Number)getAttributeInternal(CUSTACCTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustAcctId.
     * @param value value to set the CustAcctId
     */
    public void setCustAcctId(Number value) {
        setAttributeInternal(CUSTACCTID, value);
    }

    /**
     * Gets the attribute value for ProgramManager, using the alias name ProgramManager.
     * @return the ProgramManager
     */
    public String getProgramManager() {
        return (String)getAttributeInternal(PROGRAMMANAGER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProgramManager.
     * @param value value to set the ProgramManager
     */
    public void setProgramManager(String value) {
        setAttributeInternal(PROGRAMMANAGER, value);
    }

    /**
     * Gets the attribute value for ProgramPhase, using the alias name ProgramPhase.
     * @return the ProgramPhase
     */
    public Number getProgramPhase() {
        return (Number)getAttributeInternal(PROGRAMPHASE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProgramPhase.
     * @param value value to set the ProgramPhase
     */
    public void setProgramPhase(Number value) {
        setAttributeInternal(PROGRAMPHASE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }


    /**
     * Gets the attribute value for VersionNumber, using the alias name VersionNumber.
     * @return the VersionNumber
     */
    public Number getVersionNumber() {
        return (Number)getAttributeInternal(VERSIONNUMBER);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param programId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number programId) {
        return new Key(new Object[]{programId});
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        System.out.println("in dodml");
//        if (operation == DML_INSERT) {
//            this.setProgramId(new SequenceImpl("XX_SALES_PLANNING_PROGRAM_SEQ",
//                                               getDBTransaction()).getSequenceNumber());
//        }
        super.doDML(operation, e);
    }
}
